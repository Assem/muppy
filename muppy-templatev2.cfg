[env]
muppy_version = 0.2
# hosts
# list of machine ow which muppy will launch commands
# Exemples:
#   hosts = oe02,tantinet,serv3:15
#   for vagrant:
#     hosts = 127.0.0.1:2222
hosts = <<192.168.0.15>>

# Installation User and Password 
# Existing username (in sudo) that will be used for system installation and configuration. 
# Typically this is a user created by your hosting provider.
# Note that muppy can generate a server on which openerp is run by a non root user (see below)
root_user = <<ssh user in sudo group>>
root_password = <<ssh password>>

# OpenERP User and Password
# adm_user is the owner of the openerp installation.
# adm_user run openerp processes
# adm_user is NOT necessarily in the sudo group
# Convention (in muppy) is to name this user admCCCCC with CCCC = customer
adm_user = admmuppy
adm_password = 1erpuser!

# Is adm_user a sudoer
# convenient for Dev, dangerous on public machines
adm_user_is_sudoer = False

# PostgreSQL User and Password
# username et password that will be created and used by openerp to connect to the database.
db_user = openerp
db_password = openerp

# Customer directory
# => /opt/openerp/{{customer_directory}}/
# Directory in which appserver will be installed.
customer_directory = muppy

# OpenERP Admin Password
# OpenERP password required to manage database
openerp_admin_password = admin

# backup_directory
# Muppy will create this directory and use it to store:
#   - upgrade backups
# backup_directory = /opt/openerp/backups

# muppy_transactions_directory
# Muppy will create this directory and use it to store:
#   - in progress transactions
# muppy_transactions_directory = /opt/openerp/muppy_transactions

# muppy_buffer_directory
# This directory will be used as buffer to transfer files (backup,...)
# between server and remote muppy clients
# muppy_buffer_directory = /opt/openerp/muppy_buffer

# test_database_name
# Name of the default test database
# test_database_name = {{customer_directory}}_dev

# addons_list
# Used to defined updated addons when deploy a new version.
# This is used in OpenERP Update Command ( ... -u all -d acme_dev --stop-after-init ) 
# Examples:
#addons_list = envido,sido_bootstrap_data,sido_import_data,sido_test
#addons_list = all
#
# Default value:
#addons_list = all

[appserver_repository]
# Information about the repository which contains the appserver. Generaly this 
# repository is private.

# Repositories Server type.
# Supported values are: 
#    - bitbucket 
#    - gitlab
# server_type defines API to use to add deploy key
server_type = bitbucket

# User and password for an account with access to the repository defined by url below
# - If protocol is SSH, user must be allowed to set a deployment key to the 
#   appserver_repository and other_private_repositories defined below.
# - For HTTPS protocol, user must be allowed to read private repositories.
#
# Important: These values are python expressions which are evaluated with os in 'globals'

#user = os.environ['AUDAXIS_GITLAB_USERNAME']
#password = os.environ['AUDAXIS_GITLAB_PASSWORD']
user = os.environ['BITBUCKET_USERNAME']
password = os.environ['BITBUCKET_PASSWORD']

# appserver_url
# Format is derived from OpenERP buildout addons:
# appserver_url = {dvcs} {clone_url} [destination_directory] [version]
# With:
#  - dvcs = git | hg
#  - clone_url = the url you would use to clone
#  - destination_directory = optional directory name to clone into.
#  - version = optional version to clone (passed as is to dvcs).
#
# Note about protocol used in URL:
#  - ssh  	: muppy will add to adm_user sshkey's as deployment key to the private 
#             repositories ( appserver and other_private_repositories below )
#  - https	: muppy will use user and password above to download the appserver and 
#             will prompt for the others
#
# Examples:
# appserver_url = git git@gitlab.xxxxxxxxx.com:openerp/appserver-muppytest.git
# appserver_url = git git@bitbucket.org:xxxxxxxx-openerp/appserver-mt.git
# appserver_url = git https://gitlab.xxxxxxx.com/openerp/appserver-muppytest.git
# appserver_url = git https://cmorisse@bitbucket.org/xxxxxxx-openerp/appserver-xx.git
# appserver_url = hg ssh://hg@bitbucket.org/cmorisse/muppy

#appserver_url = git git@gitlab.audaxis.com:openerp/appserver-muppytest.git
appserver_url = git git@bitbucket.org:audaxis-openerp/appserver-ag.git

# Other private repositories, Muppy will add ssh-key of the server as deployment key.
# Note that:
#   - only repositories cloned via ssh must be declared here. Public repo 
#     acessed via https don't need to.
#   - these repositories must be located on the server pointed by appserver_url
# Typically, you add here the private repos in the addons section of the buildout
# TODO: Infer this list from the buildout.cfg.template
# Example:
# other_private_repositories = hg ssh://hg@bitbucket.org/cmorisse/openerpxmlmigrator openerpxmlmigrator default
# format is the same as appserver_url above.
other_private_repo_urls =


[jasperserver]
# TODO: Work In Progress - Jasper installation is not available yet. Mainly because automating jasper download is complicated !
# JasperServer requires postgres user to have a password 
# Warning: Due to a bug in Jasper this password cannot contains sp√©cial characters
postgres_password = postgres_user_password

# Name of user running Jasper Process
jasper_user = erpuser

# Password to let to jasperadmin user (instead of jasper admin)
jasperadmin_password = dqdkljfs

[magento]
# Apache hostname
# used to define a server name
apache_server_name = magento

#
# Magento website information
# name, website and port are combined to form the magento url
# 
site_name = mysite

# Final URL to connect to site.
# Note that :port is optional 
url = http://mysite.mydomain.myextension:8080

#
# encryption key 
#
#   - Required for api_user automated installation
#   - if not supplied, it will be printed at the end of installation
# WARNING: enc_key are processed the same way between Enterprise and Community
enc_key = eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee

#
# MySQL Database Configuration
#
# if mysql = localhost; muppy installs mysql
# mysql_host = localhost
mysql_root_password = psssdsd
# mysql_database_name = {{magento.site_name}}
mysql_user = mysqluser
mysql_password = mysqlpwd

#
# Magento Admin Configuration
#  
admin_user = admin
admin_password = easytoguess
admin_email = myemail+admin_mysite@gmail.net
admin_frontname_url = not_admin

#
# Magento Installation File
# Tested with 1.7, 1.8, Enterprise 1.13
#MAGENTO_DOWNLOAD_URL = http://www.magentocommerce.com/downloads/assets/1.7.0.2/magento-1.7.0.2.tar.gz

#
# OpenLABS Magento OpenERP Connector (required by the latest openerp_connector...)
#
# if True:
#   - install last version using bzr into /opt/magento/magento-module
#   - link module and descriptor into magento
install_openlabs_connector = True

#
# Magento XMLRPC Api Role and User creation
#
# if True, enc_key (see above) must be defined as api_key depends on it.
# WARNING: enc_key are processed the same way between Enterprise and Community.
# WARNING: that means that a couple enc_key, api_key running on one won't be 
# WARNING: recognized on the other !!!
create_api_user = True
api_username = oeconnector
api_user_email = myname+oeconnector_mysite@mydomainb
api_key = kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk:oooooooooooooooooooooooooooooooo




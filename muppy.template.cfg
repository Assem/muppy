[env]
# hosts
# list of machine ow which muppy will launch commands
# Exemples:
#   hosts = oe02,tantinet,serv3:15
#   for vagrant:
#     hosts = 127.0.0.1:2222
hosts = <<192.168.0.15>>

# Installation User and Password 
# Existing username (in sudo) that will be used for system installation and configuration. 
# Typically this is a user created by your hosting provider.
# Note that muppy can generate a server on which openerp is run by a non root user (see below)
root_user = <<ssh user in sudo group>>
root_password = <<ssh password>>

# OpenERP User and Password
# adm_user is the owner of the openerp installation.
# adm_user run openerp processes
# adm_user is NOT necessarily in the sudo group
# Convention (in muppy) is to name this user admCCCCC with CCCC = customer
adm_user = admmuppy
adm_password = 1erpuser!

# Is adm_user a sudoer
# convenient for Dev, dangerous on public machines
adm_user_is_sudoer = False

# PostgreSQL User and Password
# username et password that will be created and used by openerp to connect to the database.
pg_user = openerp
pg_password = openerp

# Customer directory
# => /opt/openerp/{{customer_directory}}/
# Directory in which appserver will be installed.
customer_directory = muppy

# System suffix used to customize created directories
# Remember that muppoy directory structure is:
# /opt/openerp/
#			   customer_directory/
#								  system_suffix/
# example: appserver-{{system_suffix}}
system_suffix = v7

# OpenERP Admin Password
# OpenERP password required to manage database
openerp_admin_password = admin

# addons_list
# La liste des addons qui composent le projet. 
# This list is used by the update_database command which pass it to openerp using the --update parameter
# This list is redundant with buildout.cfg addons parameter. TODO: infer this list from buildout parameter
# example:
#   addons_list = envido,sido_bootstrap_data,sido_import_data,sido_test
addons_list =

[bitbucket]
# Defines Which VCS is used to manage the appserver repository:
# - git
# - hg (default value if unspecified)
repository_type = hg

# Protocol used to talk to bitbucket ( ssh | https ) :
#  - ssh  	: muppy will add to adm_user sshkey's as deployment key to the private repositories ( appserver and
# 			  other_private_repositories below )
#  - https	: muppy will use user and password below to download the appserver and will prompt for the others
#
protocol = ssh

# En SSH, le user et le password d'un compte bitbucket qui a un accés en admin aux repositories qui composent
# le serveur (appserver-xxxx et project-xxx)
# en HTTPS, le user et le password d'un compte bitbucket qui a un accés en lecture seule sur le repository
user = <<your bitbucket user name>>
password = <<your bitbucket password>>

# Bitbucket repository which contains the application server project  (appserver-xxx)
# muppy will build a URL like ...bitbucket.org/appserver_user/appserver_repository
# YOU SHOUD FORK THIS REPOSITORY AND POINT ON YOUR FORK
appserver_user = cmorisse
appserver_repository = template-appserver-v7

# Name of the directory in wich appserver will be cloned.
# If undefined, muppy use appserver_repository
appserver_destination_directory = appserver-v7

# Other private repositories
# Muppy will add ssh-key of the server as deployment key
# Note that only repositories cloned via ssh must be declared here. 
# Public repo acessed via https don't need to.
# Here, you must all the private repos in the addons section of the buildout
# TODO: Infer this list from the buildout 
# Example:
# other_private_repositories = user/repo,user_other/repo2
other_private_repositories = 

[jasperserver]
# TODO: Work In Progress - Jasper installation is not available yet. Mainly because automating jasper download is complicated !
# JasperServer requires postgres user to have a password 
# Warning: Due to a bug in Jasper this password cannot contains spécial characters
postgres_password = postgres_user_password

# Name of user running Jasper Process
jasper_user = erpuser

# Password to let to jasperadmin user (instead of jasper admin)
jasperadmin_password = dqdkljfs

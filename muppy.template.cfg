[env]
# hosts
# définit la liste des machines sur lesquelles les commandes seront lancées
# Exemples:
#   hosts = oe02,tantinet,serv3:15
#   hosts = 127.0.0.1:2222
hosts = 192.168.0.15

# Installation User and Password 
# Un username dans le groupe sudo qui est utilisé pour toutes les commandes
root_user = vagrant
root_password = vagrant

# OpenERP User and Password
# Nom du user owner de OpenERP et qui lance les scripts
# En général, ce user s'appelle admCCCCC avec CCCC = Client
# Si défini, ce user est crée par muppy
adm_user = erpuser
adm_password = erpuser

# Is adm_user a sudoer
# convenient for Dev, dangerous on public machines
adm_user_is_sudoer = False

# PostgreSQL User and Password
# username et password qui seront créés et utilisés pour accéder à la base de donnée
pg_user = openerp
pg_password = openerp

# System suffix
# Le suffixe utilisé pour personnaliser les répertoires crées
# exemple: appserver-{{system_suffix}}
system_suffix = v7

# Customer directory
# => /opt/openerp/{{customer_directory}}/
# Le nom du répertoire dans /opt/openerp dans lequel les projets OpenERP sont installés.
customer_directory = openerp7

# OpenERP Admin Password
# Le mot de passe qui permet d'utiliser les fonction du menu "Manage Databases" de OpenERP
openerp_admin_password = admin

# addons_list
# La liste des addons qui composent le projet. 
# Cette liste est utilisée par la commande update_database qui la passe en paramètre --update
# a start_openerp.
# Cette liste est redondante avec celle qui est définie dans le buildout.
#addons_list = envido,sido_bootstrap_data,sido_import_data,sido_test
addons_list =

[bitbucket]
# Protocol used to talk to bitbucket ( ssh | https ) :
#  - ssh  	: muppy will add to adm_user sshkey's as deployment key to the private repositories ( appserver and
# 			  other_private_repositories below )
#  - https	: muppy will use user and password below to download the appserver and will prompt for the others
#
protocol = ssh

# En SSH, le user et le password d'un compte bitbucket qui a un accés en admin aux repositories qui composent
# le serveur (appserver-xxxx et project-xxx)
# en HTTPS, le user et le password d'un compte bitbucket qui a un accés en lecture seule sur le repository
user = cmorisse
password = {{password}}

# Le repository qui contient le serveur d'application (appserver-xxx)
# muppy construit une URL de la forme ...bitbucket.org/appserver_user/appserver_repository
appserver_user = cmorisse
appserver_repository = template-appserver-v7

# Name of the directory in wich appserver will be cloned.
# If undefined, muppy use appserver_repository
appserver_destination_directory = appserver-v7

# Other private repositories
# Muppy will add ssh-key of the server as deployment key
# Note that only repositories cloned via ssh must be declared here. 
# Public repo acessed via https don't need to.
# Here, you must all the private repos in the addons section of the buildout
# TODO: Infer this list from the buildout 
# Example:
# other_private_repositories = user/repo,user_other/repo2
other_private_repositories = 

[jasperserver]
# JasperServer requires postgres user to have a password 
# Du to a bug in Jasper this password cannot contains spécial characters
postgres_password = postgres_user_password

# Name of user running Jasper Process
jasper_user = erpuser

# Password to let to jasperadmin user (instead of jasper admin)
jasperadmin_password = dqAETHL
